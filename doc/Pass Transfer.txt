-- клиент --

Ожидает пароль от приложения.
При запуске открывает сессию и инициирует постоянное соединение с сервером по веб сокету. Для соединения с приложением формируется куаркод.

Инициализация 
Регистрация ИД клиента на сервере
Генерирует ключи шифрования
Генерирует куаркод на основании публичного ключа и ИД клиента
Подписывается на сообщения
	Ждет
	Новое сообщение 
	дешифрует приватным ключем
	копирует в буфер 
	очищает буфер спустя 10 секунд



-- сервер --

Проксирует сообщения приложения клиенту

Инициализация
вебсокет
Ждет команды
Регистрация клиента (ИД клиента)
	записывает связку ИД клиента ИД сокета
		если ИД клиента существует
			закрывает старый сокет
			перезаписывает новым

http
Передача сообщения от приложения
	по ИД находит сокет и передает сообщение
		200 если успех
		400 если ошибка

Подключение приложения
	по ИД находит сокет
		200 если найден и подключен
		400 если не найден или не подключен

Хранение подключений
clientID : {clientID:string, socketID:string, lastUpdate:date}


-- приложение --

Сканирую куар, сохраняю
	публичный ключ
	ИД клиента

Инициюрую подключение от приложения
	Если 200 то позволяю передачу
	Если 400 то вывожу сообщение об ошибке

Передача пароля
	Шифрую пароль публичным ключом
	Отправляю сообщение используя ИД клиента
		200 успех
		400 ошибка
			после 3 ошибок подряд удаляю ключ и ИД клиента
			требуется переподключение











